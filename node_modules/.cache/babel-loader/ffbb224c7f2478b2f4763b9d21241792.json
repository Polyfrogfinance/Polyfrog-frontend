{"ast":null,"code":"var _jsxFileName = \"D:\\\\GITHUB\\\\Polyfrog\\\\polyfrog-frontend\\\\src\\\\views\\\\Home\\\\components\\\\Metamask.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport useI18n from 'hooks/useI18n';\nimport { useAllHarvest } from 'hooks/useHarvest';\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance';\nimport { getCakeAddress } from '../../../utils/addressHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\nbackground-image: url('/images/egg/meta.png');\nbackground-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n \n`;\n_c = StyledFarmStakingCard;\nconst Block = styled.div`\n  margin-bottom: 16px;\n`;\nconst TokenImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0px;\n`;\n_c2 = TokenImageWrapper;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n`;\n_c3 = Wrapper;\nconst CardImage = styled.img`\n  margin-bottom: 0px;\n`;\n_c4 = CardImage;\nconst Label = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n`;\nconst Actions = styled.div`\n  margin-top: 24px;\n`;\nconst token = getCakeAddress();\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWallet();\n  const TranslateString = useI18n();\n  const FarmsWithBalance = useFarmsWithBalance();\n  const balancesWithValue = FarmsWithBalance.filter(balanceType => balanceType.balance.toNumber() > 0);\n  const {\n    onReward\n  } = useAllHarvest(balancesWithValue.map(farmWithBalance => farmWithBalance.pid));\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true);\n\n    try {\n      await onReward();\n    } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false);\n    }\n  }, [onReward]);\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum;\n\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'honest',\n              decimals: '18',\n              image: '/logo.png'\n            }\n          }\n        });\n\n        if (wasAdded) {\n          console.log('Token was added');\n        }\n      } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      margin: 24,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: \"About \\uD83D\\uDE9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenImageWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CardImage, {\n          src: \"/images/egg/9.png\",\n          alt: \"Farm honest logo\",\n          width: 60,\n          height: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            as: \"a\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: \"https://app.gitbook.com/@honest-team/s/honestwork-farms/\",\n            size: \"sm\",\n            children: \"Docs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            as: \"a\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: \"https://app.gitbook.com/@honest-team/s/honestwork-farms/token/becoming-an-honest-farmer\",\n            size: \"sm\",\n            children: \"Buy Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"UOAjZ6Kc45vH2C9afQzl56Icf5c=\", false, function () {\n  return [useWallet, useI18n, useFarmsWithBalance, useAllHarvest];\n});\n\n_c5 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"TokenImageWrapper\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"CardImage\");\n$RefreshReg$(_c5, \"FarmedStakingCard\");","map":{"version":3,"sources":["D:/GITHUB/Polyfrog/polyfrog-frontend/src/views/Home/components/Metamask.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWallet","useI18n","useAllHarvest","useFarmsWithBalance","getCakeAddress","StyledFarmStakingCard","Block","div","TokenImageWrapper","Wrapper","CardImage","img","Label","theme","colors","textSubtle","Actions","token","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","FarmsWithBalance","balancesWithValue","filter","balanceType","balance","toNumber","onReward","map","farmWithBalance","pid","harvestAllFarms","error","addWatchJaguarToken","provider","window","ethereum","wasAdded","request","method","params","type","options","address","symbol","decimals","image","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\nimport { usePriceCakeBusd } from '../../../state/hooks'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport { getCakeAddress } from '../../../utils/addressHelpers'\nimport useAllEarnings from '../../../hooks/useAllEarnings'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\nbackground-image: url('/images/egg/meta.png');\nbackground-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n \n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst TokenImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 0px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst token = getCakeAddress();\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const FarmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = FarmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'honest',\n              decimals: '18',\n              image: '/logo.png',\n            },\n          },\n        })\n\n        if (wasAdded) {\n          console.log('Token was added')\n        }\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, [])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody margin={24}>\n        <Heading size=\"xl\" mb=\"24px\">\n          About 🚜\n        </Heading>\n        <TokenImageWrapper>\n          <CardImage src=\"/images/egg/9.png\" alt=\"Farm honest logo\" width={60} height={60} />\n          <hr />\n          <Wrapper>\n            <Button as=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://app.gitbook.com/@honest-team/s/honestwork-farms/\" size=\"sm\">\n              Docs\n            </Button>\n            <Button as=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://app.gitbook.com/@honest-team/s/honestwork-farms/token/becoming-an-honest-farmer\" size=\"sm\">\n              Buy Now\n            </Button>\n          </Wrapper>\n        </TokenImageWrapper>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard"]},"metadata":{},"sourceType":"module"}